{"ast":null,"code":"var _jsxFileName = \"/home/rnp/microbanking-system/frontend/src/components/LoginRegister.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginRegister = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const validateLoginForm = () => {\n    const newErrors = {};\n    if (!loginData.username.trim()) {\n      newErrors.loginUsername = 'Username is required';\n    }\n    if (!loginData.password) {\n      newErrors.loginPassword = 'Password is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!validateLoginForm()) return;\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/login', {\n        username: loginData.username,\n        password: loginData.password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      onLoginSuccess();\n      navigate('/dashboard');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLoginChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData({\n      ...loginData,\n      [name]: value\n    });\n    // Clear error when user starts typing\n    const errorKey = `login${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    if (errors[errorKey]) {\n      setErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[errorKey];\n        return newErrors;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Microbanking System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"auth-form\",\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: loginData.username,\n              onChange: handleLoginChange,\n              required: true,\n              className: errors.loginUsername ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), errors.loginUsername && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.loginUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: loginData.password,\n              onChange: handleLoginChange,\n              required: true,\n              className: errors.loginPassword ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), errors.loginPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.loginPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading,\n            children: isLoading ? 'Logging in...' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Only authorized personnel can access this system.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Contact administrator for account creation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginRegister, \"XtAL7T7tTUGKCJ7eov6xj6BRPFk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginRegister","onLoginSuccess","_s","isLoading","setIsLoading","errors","setErrors","loginData","setLoginData","username","password","navigate","validateLoginForm","newErrors","trim","loginUsername","loginPassword","Object","keys","length","handleLogin","e","preventDefault","response","post","token","user","data","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","alert","message","handleLoginChange","name","value","target","errorKey","charAt","toUpperCase","slice","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","disabled","_c","$RefreshReg$"],"sources":["/home/rnp/microbanking-system/frontend/src/components/LoginRegister.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface LoginData {\n  username: string;\n  password: string;\n}\n\ninterface LoginRegisterProps {\n  onLoginSuccess: () => void;\n}\n\ninterface FormErrors {\n  [key: string]: string;\n}\n\nconst LoginRegister: React.FC<LoginRegisterProps> = ({ onLoginSuccess }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [loginData, setLoginData] = useState<LoginData>({\n    username: '',\n    password: ''\n  });\n\n  const navigate = useNavigate();\n\n  const validateLoginForm = (): boolean => {\n    const newErrors: FormErrors = {};\n    \n    if (!loginData.username.trim()) {\n      newErrors.loginUsername = 'Username is required';\n    }\n    \n    if (!loginData.password) {\n      newErrors.loginPassword = 'Password is required';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!validateLoginForm()) return;\n    \n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/login', {\n        username: loginData.username,\n        password: loginData.password\n      });\n      const { token, user } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      onLoginSuccess();\n      navigate('/dashboard');\n    } catch (error: any) {\n      alert(error.response?.data?.message || 'Login failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLoginChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setLoginData({\n      ...loginData,\n      [name]: value\n    });\n    // Clear error when user starts typing\n    const errorKey = `login${name.charAt(0).toUpperCase() + name.slice(1)}`;\n    if (errors[errorKey]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[errorKey];\n        return newErrors;\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Microbanking System</h1>\n        <div className=\"auth-container\">\n          {/* Loading Overlay */}\n          {isLoading && (\n            <div className=\"loading-overlay\">\n              <div className=\"loading-spinner\">Loading...</div>\n            </div>\n          )}\n          \n          <form className=\"auth-form\" onSubmit={handleLogin}>\n            <h2>Login</h2>\n            <div className=\"form-group\">\n              <label>Username:</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={loginData.username}\n                onChange={handleLoginChange}\n                required\n                className={errors.loginUsername ? 'error' : ''}\n              />\n              {errors.loginUsername && <span className=\"error-text\">{errors.loginUsername}</span>}\n            </div>\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={loginData.password}\n                onChange={handleLoginChange}\n                required\n                className={errors.loginPassword ? 'error' : ''}\n              />\n              {errors.loginPassword && <span className=\"error-text\">{errors.loginPassword}</span>}\n            </div>\n            <button type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Logging in...' : 'Login'}\n            </button>\n          </form>\n\n          <div className=\"login-info\">\n            <p>Only authorized personnel can access this system.</p>\n            <p>Contact administrator for account creation.</p>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default LoginRegister;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}