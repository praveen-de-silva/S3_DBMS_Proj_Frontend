{"ast":null,"code":"var _jsxFileName = \"/home/rnp/microbanking-system/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Dashboard from './components/Dashboard';\nimport LoginRegister from './components/LoginRegister';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport './App.css';\n\n// Set axios base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Add axios interceptor to include token in requests\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n    setIsLoading(false);\n  }, []);\n  const updateAuthStatus = status => {\n    setIsAuthenticated(status);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(LoginRegister, {\n          onLoginSuccess: () => updateAuthStatus(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            onLogout: () => updateAuthStatus(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QGOAXroSjAVQAlauW9LqDUcn+wM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","axios","Dashboard","LoginRegister","ProtectedRoute","jsxDEV","_jsxDEV","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","App","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","updateAuthStatus","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","onLoginSuccess","onLogout","_c","$RefreshReg$"],"sources":["/home/rnp/microbanking-system/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Dashboard from './components/Dashboard';\nimport LoginRegister from './components/LoginRegister';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport './App.css';\n\n// Set axios base URL\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Add axios interceptor to include token in requests\naxios.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const updateAuthStatus = (status: boolean) => {\n    setIsAuthenticated(status);\n  };\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            isAuthenticated ? \n            <Navigate to=\"/dashboard\" replace /> : \n            <LoginRegister onLoginSuccess={() => updateAuthStatus(true)} />\n          } \n        />\n        <Route \n          path=\"/dashboard\" \n          element={\n            <ProtectedRoute>\n              <Dashboard onLogout={() => updateAuthStatus(false)} />\n            </ProtectedRoute>\n          } \n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}